version: "3"

services:
  sonarqube:
    image: sonarqube:10.3-community
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://postgresql:5432/sonar
      SONAR_JDBC_USERNAME: sonarqube
      SONAR_JDBC_PASSWORD: password
      SONAR_WEB_JAVAADDITIONALOPTS: -javaagent:./extensions/plugins/sonarqube-community-branch-plugin-1.18.0.jar=web
      SONAR_CE_JAVAADDITIONALOPTS: -javaagent:./extensions/plugins/sonarqube-community-branch-plugin-1.18.0.jar=ce
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    ports:
      - "9000:9000"
    networks:
      - sonarnetwork 
  postgresql:
    image: postgres
    container_name: postgresql
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_ROOT_PASSWORD: ${POSTGRES_ROOT_PASSWORD}
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - /data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - sonarnetwork
    entrypoint: ["docker-entrypoint.sh", "-c", "config_file=/var/lib/postgresql/data/postgresql.conf"]     
volumes:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
networks:
  sonarnetwork:
    driver: bridge